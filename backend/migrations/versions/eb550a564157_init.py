"""init

Revision ID: eb550a564157
Revises:
Create Date: 2025-10-12 22:03:49.521062

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "eb550a564157"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bots",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("params", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_bots_name"), "bots", ["name"], unique=False)
    op.create_table(
        "instruments",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("s_0", sa.Float(), nullable=False),
        sa.Column("mean", sa.Float(), nullable=False),
        sa.Column("variance", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_instruments_full_name"), "instruments", ["full_name"], unique=False
    )
    op.create_table(
        "macro_factors",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("alpha", sa.Float(), nullable=False),
        sa.Column("cap_up", sa.Float(), nullable=False),
        sa.Column("cap_down", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_macro_factors_name"), "macro_factors", ["name"], unique=False
    )
    op.create_table(
        "news_events",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("ts_release_ms", sa.Integer(), nullable=False),
        sa.Column("headline", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("magnitude", sa.Float(), nullable=False),
        sa.Column("decay_halflife_s", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_news_events_ts_release_ms"),
        "news_events",
        ["ts_release_ms"],
        unique=False,
    )
    op.create_table(
        "sectors",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "bot_positions",
        sa.Column("bot_id", sa.Integer(), nullable=False),
        sa.Column("instrument_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("qty", sa.Integer(), nullable=False),
        sa.Column("cash", sa.Float(), nullable=False),
        sa.Column("last_updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bot_id"],
            ["bots.id"],
        ),
        sa.ForeignKeyConstraint(
            ["instrument_id"],
            ["instruments.id"],
        ),
        sa.PrimaryKeyConstraint("bot_id", "instrument_id"),
    )
    op.create_table(
        "instrument_factor_exposure",
        sa.Column("instrument_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("factor_id", sa.Uuid(), nullable=False),
        sa.Column("beta", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["factor_id"],
            ["macro_factors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["instrument_id"],
            ["instruments.id"],
        ),
        sa.PrimaryKeyConstraint("instrument_id", "factor_id"),
    )
    op.create_table(
        "instrument_sector_exposure",
        sa.Column("instrument_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("sector_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["instrument_id"],
            ["instruments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sector_id"],
            ["sectors.id"],
        ),
        sa.PrimaryKeyConstraint("instrument_id", "sector_id"),
    )
    op.create_table(
        "news_event_factors",
        sa.Column("news_event_id", sa.Uuid(), nullable=False),
        sa.Column("factor_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["factor_id"],
            ["macro_factors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["news_event_id"],
            ["news_events.id"],
        ),
        sa.PrimaryKeyConstraint("news_event_id", "factor_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("news_event_factors")
    op.drop_table("instrument_sector_exposure")
    op.drop_table("instrument_factor_exposure")
    op.drop_table("bot_positions")
    op.drop_table("sectors")
    op.drop_index(op.f("ix_news_events_ts_release_ms"), table_name="news_events")
    op.drop_table("news_events")
    op.drop_index(op.f("ix_macro_factors_name"), table_name="macro_factors")
    op.drop_table("macro_factors")
    op.drop_index(op.f("ix_instruments_full_name"), table_name="instruments")
    op.drop_table("instruments")
    op.drop_index(op.f("ix_bots_name"), table_name="bots")
    op.drop_table("bots")
    # ### end Alembic commands ###
